[build-system]
requires = ["scikit-build-core"]
build-backend = "scikit_build_core.build"

[project]
name = "cmake"
description = "CMake is an open-source, cross-platform family of tools designed to build, test and package software"
keywords = ["CMake", "build", "c++", "fortran", "cross-platform", "cross-compilation"]
readme = "README.rst"
license = {text = "Apache 2.0"}
authors = [
    {name = "Jean-Christophe Fillion-Robin", email = "jchris.fillionr@kitware.com"},
]
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: C",
    "Programming Language :: C++",
    "Programming Language :: Fortran",
    "Programming Language :: Python",
    "Operating System :: OS Independent",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",
    "Typing :: Typed"
]
dependencies = [
  "importlib_metadata>=1.4; python_version<'3.8'",
]
dynamic = ["version"]
requires-python = ">=3.7"

[project.urls]
Homepage = "https://cmake.org"
Documentation = "https://cmake-python-distributions.readthedocs.io"
Source = "https://github.com/scikit-build/cmake-python-distributions"
"Mailing list" = "https://groups.google.com/forum/#!forum/scikit-build"
"Bug Tracker" = "https://github.com/scikit-build/cmake-python-distributions/issues"

[project.optional-dependencies]
test = [
  "coverage>=4.2",
  "pytest>=3.0.3",
  "pytest-cov>=2.4.0",
]

[project.scripts]
cmake = "cmake:cmake"
cpack = "cmake:cpack"
ctest = "cmake:ctest"

[tool.scikit-build]
minimum-version = "0.8"
build-dir = "build/{wheel_tag}"
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
ninja.make-fallback = false
sdist.include = ["src/cmake/_version.py"]
wheel.py-api = "py3"
wheel.expand-macos-universal-tags = true
wheel.install-dir = "cmake/data"

[tool.setuptools_scm]
write_to = "src/cmake/_version.py"
# Setuptools-scm includes type annotations in the default template
write_to_template = "version = '{version}'"

[tool.cibuildwheel]
build = "cp39-*"
test-extras = "test"
test-command = "pytest {project}/tests"
build-verbosity = 1

[tool.cibuildwheel.linux]
before-all = [
    './scripts/manylinux-build-and-install-openssl.sh',
]
environment = { CMAKE_ARGS = "-DOPENSSL_ROOT_DIR:PATH=/usr/local/ssl -DCMAKE_JOB_POOL_COMPILE:STRING=compile -DCMAKE_JOB_POOL_LINK:STRING=link -DCMAKE_JOB_POOLS:STRING=compile=4;link=1 -DCMAKE_CXX_STANDARD:STRING=11" }

[[tool.cibuildwheel.overrides]]
select = ["*-manylinux_aarch64", "*-manylinux_ppc64le", "*-manylinux_s390x"]
# disable tests on those platforms, QEMU is taking to long for jobs to pass on GHA
environment = { CMAKE_ARGS = "-DOPENSSL_ROOT_DIR:PATH=/usr/local/ssl -DCMAKE_JOB_POOL_COMPILE:STRING=compile -DCMAKE_JOB_POOL_LINK:STRING=link -DCMAKE_JOB_POOLS:STRING=compile=4;link=1 -DCMAKE_CXX_STANDARD:STRING=11 -DRUN_CMAKE_TEST:BOOL=OFF" }

[[tool.cibuildwheel.overrides]]
select = ["*-musllinux_x86_64", "*-musllinux_i686"]
# disable some tests
# - BootstrapTest fails with custom OpenSSL and probably does not make much sense for this project
# - ExportImport|RunCMake.install|RunCMake.file-GET_RUNTIME_DEPENDENCIES: c.f. https://discourse.cmake.org/t/cmake-test-suite-failing-on-alpine-linux/5064
environment = { CMAKE_ARGS = "-DOPENSSL_ROOT_DIR:PATH=/usr/local/ssl -DCMAKE_JOB_POOL_COMPILE:STRING=compile -DCMAKE_JOB_POOL_LINK:STRING=link -DCMAKE_JOB_POOLS:STRING=compile=4;link=1 -DRUN_CMAKE_TEST_EXCLUDE:STRING='BootstrapTest|ExportImport|RunCMake.install|RunCMake.RuntimePath|RunCMake.file-GET_RUNTIME_DEPENDENCIES'" }

[[tool.cibuildwheel.overrides]]
select = ["*-musllinux_aarch64", "*-musllinux_ppc64le", "*-musllinux_s390x"]
# disable tests on those platforms, QEMU is taking to long for jobs to pass on GHA
environment = { CMAKE_ARGS = "-DOPENSSL_ROOT_DIR:PATH=/usr/local/ssl -DCMAKE_JOB_POOL_COMPILE:STRING=compile -DCMAKE_JOB_POOL_LINK:STRING=link -DCMAKE_JOB_POOLS:STRING=compile=4;link=1 -DRUN_CMAKE_TEST:BOOL=OFF" }

[tool.cibuildwheel.macos.environment]
MACOSX_DEPLOYMENT_TARGET = "10.10"


[tool.ruff]
src = ["src"]

[tool.ruff.lint]
extend-select = [
  "B",           # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "ICN",         # flake8-import-conventions
  "ISC",         # flake8-implicit-str-concat
  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "EXE",         # flake8-executable
  "NPY",         # NumPy specific rules
  "PD",          # pandas-vet
]
ignore = [
  "PLR09",  # Too many X
]
exclude = ["src/cmake/_version.py"]
flake8-unused-arguments.ignore-variadic-names = true

[tool.ruff.lint.per-file-ignores]
"docs/conf.py" = ["E402"]
"*.pyi" = ["ARG001"]
"noxfile.py" = ["PLW0603"]
