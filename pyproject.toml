[build-system]
requires = ["scikit-build-core"]
build-backend = "scikit_build_core.build"

[project]
name = "cmake"
version = "3.29.5.1"
description = "CMake is an open-source, cross-platform family of tools designed to build, test and package software"
keywords = ["CMake", "build", "c++", "fortran", "cross-platform", "cross-compilation"]
readme = "README.rst"
license = {text = "Apache 2.0"}
authors = [
    {name = "Jean-Christophe Fillion-Robin", email = "jchris.fillionr@kitware.com"},
]
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: C",
    "Programming Language :: C++",
    "Programming Language :: Fortran",
    "Programming Language :: Python",
    "Operating System :: OS Independent",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",
    "Typing :: Typed"
]
dependencies = [
  "importlib_metadata>=1.4; python_version<'3.8'",
]
requires-python = ">=3.7"

[project.urls]
Homepage = "https://cmake.org"
Documentation = "https://cmake-python-distributions.readthedocs.io"
Source = "https://github.com/scikit-build/cmake-python-distributions"
"Mailing list" = "https://groups.google.com/forum/#!forum/scikit-build"
"Bug Tracker" = "https://github.com/scikit-build/cmake-python-distributions/issues"

[project.optional-dependencies]
test = [
  "coverage>=4.2",
  "pytest>=3.0.3",
  "pytest-cov>=2.4.0",
]

[project.scripts]
cmake = "cmake:cmake"
cpack = "cmake:cpack"
ctest = "cmake:ctest"

[tool.scikit-build]
minimum-version = "0.8"
build-dir = "build/{wheel_tag}"
cmake.version = ""  # We are cmake, so don't request cmake
ninja.make-fallback = false
wheel.py-api = "py3"
wheel.expand-macos-universal-tags = true
wheel.install-dir = "cmake/data"

[[tool.scikit-build.generate]]
path = "cmake/_version.py"
template = '''
version = "${version}"
'''


[tool.cibuildwheel]
build = "cp39-*"
test-extras = "test"
test-command = "pytest {project}/tests"
build-verbosity = 1
musllinux-x86_64-image = "musllinux_1_1"
musllinux-i686-image = "musllinux_1_1"
musllinux-aarch64-image = "musllinux_1_1"
musllinux-ppc64le-image = "musllinux_1_1"
musllinux-s390x-image = "musllinux_1_1"

[tool.cibuildwheel.macos.environment]
MACOSX_DEPLOYMENT_TARGET = "10.10"

[tool.cibuildwheel.linux]
before-all = "./scripts/manylinux-build-and-install-openssl.sh"

[tool.cibuildwheel.config-settings]
"cmake.define.RUN_CMAKE_TEST" = "ON"

[tool.cibuildwheel.linux.config-settings]
"cmake.define.OPENSSL_ROOT_DIR" = "/usr/local/ssl"
"cmake.define.CMAKE_JOB_POOL_COMPILE" = "compile"
"cmake.define.CMAKE_JOB_POOL_LINK" = "link"
"cmake.define.CMAKE_JOB_POOLS" = "compile=4;link=1"
"cmake.define.RUN_CMAKE_TEST" = "ON"

[[tool.cibuildwheel.overrides]]
select = ["*-musllinux_*",]
config-settings."cmake.define.OPENSSL_ROOT_DIR" = "/usr/local/ssl"
config-settings."cmake.define.CMAKE_JOB_POOL_COMPILE" = "compile"
config-settings."cmake.define.CMAKE_JOB_POOL_LINK" = "link"
config-settings."cmake.define.CMAKE_JOB_POOLS" = "compile=4;link=1"
config-settings."cmake.define.RUN_CMAKE_TEST" = "ON"
# disable some tests
# - BootstrapTest fails with custom OpenSSL and probably does not make much sense for this project
# - ExportImport|RunCMake.install|RunCMake.file-GET_RUNTIME_DEPENDENCIES: c.f. https://discourse.cmake.org/t/cmake-test-suite-failing-on-alpine-linux/5064
config-settings."cmake.define.RUN_CMAKE_TEST_EXCLUDE" = "BootstrapTest|ExportImport|RunCMake.install|RunCMake.RuntimePath|RunCMake.file-GET_RUNTIME_DEPENDENCIES"

[[tool.cibuildwheel.overrides]]
select = ["*linux_aarch64", "*linux_ppc64le", "*linux_s390x"]
config-settings."cmake.define.OPENSSL_ROOT_DIR" = "/usr/local/ssl"
config-settings."cmake.define.CMAKE_JOB_POOL_COMPILE" = "compile"
config-settings."cmake.define.CMAKE_JOB_POOL_LINK" = "link"
config-settings."cmake.define.CMAKE_JOB_POOLS" = "compile=4;link=1"
# disable tests on those platforms, QEMU is taking to long for jobs to pass on GHA
config-settings."cmake.define.RUN_CMAKE_TEST" = "OFF"


[tool.mypy]
files = ["src", "scripts"]
python_version = "3.8"
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true

[tool.ruff]
src = ["src"]

[tool.ruff.lint]
extend-select = [
  "ARG",         # flake8-unused-arguments
  "B",           # flake8-bugbear
  "C4",          # flake8-comprehensions
  "EXE",         # flake8-executable
  "G",           # flake8-logging-format
  "I",           # isort
  "ICN",         # flake8-import-conventions
  "ISC",         # flake8-implicit-str-concat
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "UP",          # pyupgrade
]
ignore = [
  "PLR09",  # Too many X
]
exclude = ["src/cmake/_version.py"]
flake8-unused-arguments.ignore-variadic-names = true

[tool.ruff.lint.per-file-ignores]
"docs/conf.py" = ["E402"]
"*.pyi" = ["ARG001"]
"noxfile.py" = ["PLW0603"]
